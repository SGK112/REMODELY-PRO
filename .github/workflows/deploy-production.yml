name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    # ðŸš€ NextJS Cache for production builds
    - name: NextJS Cache
      uses: jongwooo/next-cache@v1.0.0
      with:
        cache-key: ${{ runner.os }}-nextjs-prod-${{ hashFiles('**/package-lock.json') }}
        cache-paths: |
          ~/.npm
          .next/cache
          node_modules
        restore-keys: |
          ${{ runner.os }}-nextjs-prod-
          ${{ runner.os }}-nextjs-

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Generate Prisma Client
      run: npx prisma generate

    - name: Build for production
      env:
        NODE_OPTIONS: "--max-old-space-size=2048"
        NODE_ENV: production
      run: npm run build:render

    - name: Run production tests
      run: |
        npm run lint
        # Add production-specific health checks
        node -e "console.log('âœ… Production build validated')"

    # Optional: Deploy to additional services
    - name: Deploy notification
      run: |
        echo "ðŸš€ Production build completed and ready for deployment!"
        echo "Cache status: ${{ steps.cache.outputs.cache-hit }}"

    # If you want to trigger Render deploy via webhook
    - name: Trigger Render Deploy
      if: success()
      run: |
        echo "Triggering Render deployment..."
        # curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
